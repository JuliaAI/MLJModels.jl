name: Check Registry
on:
  pull_request:
    branches:
      - master
      - dev # remove before merging PR
jobs:
  check_registry:
    # The line below should be uncommented before this PR is merged
    #if: (${{ github.head_ref }} == "dev") && (${{ github.repository }} == ${{ github.event.pull_request.head.repo.full_name }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1'
        os:
          - ubuntu-latest
        arch:
          - x64
    env:
      PYTHON: "Conda"
      
      # remove next line (and others marked below) when 
      # JuliaAI/MLJScikitLearnInterface.jl#42 properly resolved
      LD_LIBRARY_PATH: /home/runner/.julia/conda/3/lib

    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@v1

      # remove next four lines (and one other marked above) when 
      # JuliaAI/MLJScikitLearnInterface.jl#42 gets properly resolved
      - name: "Install Conda"
        run: julia -e 'using Pkg; Pkg.add("Conda");'
      - name: "Install Scikit-learn"
        run: cd $LD_LIBRARY_PATH
      
      - run: julia -e 'using Pkg; Pkg.Registry.update()'
      - run: julia -e 'using Pkg; Pkg.develop(Pkg.PackageSpec(path = pwd()))'
      - run: julia -e 'using Pkg; Pkg.add("Test")'
      - run: julia -e 'using Pkg; Pkg.update()'
      - run: julia -e 'using Pkg; Pkg.precompile()'
      - run: julia -e 'using Pkg; Pkg.status()'
      - run: julia -e 'using MLJModels; using Test; problems = MLJModels.check_registry(); @info("", length(problems), problems); @test(isempty(problems))'
