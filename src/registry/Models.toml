NearestNeighbors = ["KNNClassifier", "KNNRegressor"]
ScikitLearn = ["ProbabilisticSGDClassifier", "RidgeCVClassifier", "LogisticClassifier", "RandomForestRegressor", "ElasticNetCVRegressor", "PerceptronClassifier", "MultiTaskLassoRegressor", "LinearRegressor", "RidgeRegressor", "LassoLarsICRegressor", "ARDRegressor", "SVMNuRegressor", "RidgeClassifier", "SGDRegressor", "ComplementNBClassifier", "HuberRegressor", "SVMNuClassifier", "GradientBoostingClassifier", "GaussianProcessRegressor", "LarsRegressor", "SVMLClassifier", "AdaBoostRegressor", "MultiTaskLassoCVRegressor", "OrthogonalMatchingPursuitRegressor", "RidgeCVRegressor", "PassiveAggressiveClassifier", "SVMRegressor", "BernoulliNBClassifier", "GaussianNBClassifier", "ExtraTreesClassifier", "MultiTaskElasticNetCVRegressor", "LassoLarsCVRegressor", "OrthogonalMatchingPursuitCVRegressor", "AdaBoostClassifier", "PassiveAggressiveRegressor", "BayesianRidgeRegressor", "RANSACRegressor", "BaggingClassifier", "GaussianProcessClassifier", "KNeighborsRegressor", "LassoCVRegressor", "DummyRegressor", "LassoLarsRegressor", "LarsCVRegressor", "KNeighborsClassifier", "DummyClassifier", "BaggingRegressor", "SGDClassifier", "TheilSenRegressor", "ElasticNetRegressor", "RandomForestClassifier", "LogisticCVClassifier", "MultiTaskElasticNetRegressor", "ExtraTreesRegressor", "LassoRegressor", "MultinomialNBClassifier", "GradientBoostingRegressor", "SVMClassifier", "SVMLRegressor"]
ScientificTypes = []
NaiveBayes = ["GaussianNBClassifier", "MultinomialNBClassifier"]
MultivariateStats = ["ICA", "RidgeRegressor", "KernelPCA", "PCA"]
DecisionTree = ["DecisionTreeRegressor", "DecisionTreeClassifier"]
Clustering = ["KMeans", "KMedoids"]
XGBoost = ["XGBoostCount", "XGBoostRegressor", "XGBoostClassifier"]
MLJModels = ["ConstantClassifier", "Standardizer", "DeterministicConstantClassifier", "OneHotEncoder", "StaticTransformer", "UnivariateBoxCoxTransformer", "ConstantRegressor", "FeatureSelector", "FillImputer", "DeterministicConstantRegressor", "UnivariateStandardizer"]
LIBSVM = ["EpsilonSVR", "LinearSVC", "NuSVR", "NuSVC", "SVC", "OneClassSVM"]
GLM = ["LinearBinaryClassifier", "LinearCountRegressor", "LinearRegressor"]
